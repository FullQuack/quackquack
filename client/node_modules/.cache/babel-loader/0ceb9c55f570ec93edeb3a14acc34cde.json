{"ast":null,"code":"import _defineProperty from \"/Users/jonathanschwartz/Desktop/FullQuack-app-separate/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/jonathanschwartz/Desktop/FullQuack-app-separate/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jonathanschwartz/Desktop/FullQuack-app-separate/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonathanschwartz/Desktop/FullQuack-app-separate/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonathanschwartz/Desktop/FullQuack-app-separate/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonathanschwartz/Desktop/FullQuack-app-separate/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jonathanschwartz/Desktop/FullQuack-app-separate/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jonathanschwartz/Desktop/FullQuack-app-separate/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jonathanschwartz/Desktop/FullQuack-app-separate/client/src/components/layout/PostQuestion.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { WithContext as ReactTags } from 'react-tag-input';\nvar KeyCodes = {\n  comma: 188,\n  enter: 13\n};\n\nvar PostQuestion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostQuestion, _Component);\n\n  function PostQuestion() {\n    var _this;\n\n    _classCallCheck(this, PostQuestion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostQuestion).call(this));\n    _this.state = {\n      name: localStorage.getItem('name'),\n      token: localStorage.getItem('jwtToken').split(\" \")[1],\n      question: \"\",\n      tags: \"\",\n      suggestions: [{\n        id: 'USA',\n        text: 'USA'\n      }, {\n        id: 'Germany',\n        text: 'Germany'\n      }, {\n        id: 'Austria',\n        text: 'Austria'\n      }, {\n        id: 'Costa Rica',\n        text: 'Costa Rica'\n      }, {\n        id: 'Sri Lanka',\n        text: 'Sri Lanka'\n      }, {\n        id: 'Thailand',\n        text: 'Thailand'\n      }]\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddition = _this.handleAddition.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDrag = _this.handleDrag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PostQuestion, [{\n    key: \"handleDelete\",\n    value: function handleDelete(i) {\n      var tags = this.state.tags;\n      this.setState({\n        tags: tags.filter(function (tag, index) {\n          return index !== i;\n        })\n      });\n    }\n  }, {\n    key: \"handleAddition\",\n    value: function handleAddition(tag) {\n      this.setState(function (state) {\n        return {\n          tags: _toConsumableArray(state.tags).concat([tag])\n        };\n      });\n    }\n  }, {\n    key: \"handleDrag\",\n    value: function handleDrag(tag, currPos, newPos) {\n      var tags = _toConsumableArray(this.state.tags);\n\n      var newTags = tags.slice();\n      newTags.splice(currPos, 1);\n      newTags.splice(newPos, 0, tag); // re-render\n\n      this.setState({\n        tags: newTags\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var newPost = {\n        name: this.state.name,\n        text: this.state.question,\n        tags: this.state.tags\n      };\n      axios.post('/api/posts/', newPost).then(function (res) {\n        console.log(res.data);\n\n        _this2.props.history.push('/successlogin');\n      }).catch(function (err) {\n        return _this2.setState({\n          errors: err.response.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Welcome Quack!\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Login to your FullQuack Account\"), React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-lg\",\n        placeholder: \"Quacked Question\",\n        name: \"question\",\n        value: this.state.question,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        \"data-role\": \"tagsinput\",\n        className: \"form-control\",\n        placeholder: \"Tags (i.e., Javascript, Google Interview, React Dev)\",\n        name: \"tags\",\n        value: this.state.tags,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(ReactTags, {\n        tags: tags,\n        suggestions: suggestions,\n        handleDelete: this.handleDelete,\n        handleAddition: this.handleAddition,\n        handleDrag: this.handleDrag,\n        delimiters: delimiters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-info btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return PostQuestion;\n}(Component);\n\nexport default PostQuestion;","map":{"version":3,"sources":["/Users/jonathanschwartz/Desktop/FullQuack-app-separate/client/src/components/layout/PostQuestion.js"],"names":["React","Component","axios","setAuthToken","WithContext","ReactTags","KeyCodes","comma","enter","PostQuestion","state","name","localStorage","getItem","token","split","question","tags","suggestions","id","text","onChange","bind","onSubmit","handleDelete","handleAddition","handleDrag","i","setState","filter","tag","index","currPos","newPos","newTags","slice","splice","e","target","value","preventDefault","newPost","post","then","res","console","log","data","props","history","push","catch","err","errors","response","delimiters"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n\n\nclass PostQuestion extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: localStorage.getItem('name'),\n      token: localStorage.getItem('jwtToken').split(\" \")[1],\n      question: \"\",\n      tags: \"\",\n      suggestions: [\n        { id: 'USA', text: 'USA' },\n        { id: 'Germany', text: 'Germany' },\n        { id: 'Austria', text: 'Austria' },\n        { id: 'Costa Rica', text: 'Costa Rica' },\n        { id: 'Sri Lanka', text: 'Sri Lanka' },\n        { id: 'Thailand', text: 'Thailand' }\n     ],\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n  }\n\n  handleDelete(i) {\n    const { tags } = this.state;\n    this.setState({\n     tags: tags.filter((tag, index) => index !== i),\n    });\n}\n\nhandleAddition(tag) {\n    this.setState(state => ({ tags: [...state.tags, tag] }));\n}\n\nhandleDrag(tag, currPos, newPos) {\n    const tags = [...this.state.tags];\n    const newTags = tags.slice();\n\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag);\n\n    // re-render\n    this.setState({ tags: newTags });\n}\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newPost = {\n      name: this.state.name,\n      text: this.state.question,\n      tags: this.state.tags,\n    };\n    axios\n      .post('/api/posts/', newPost)\n      .then(res => { \n        console.log(res.data);\n        this.props.history.push('/successlogin');\n       })\n      .catch(err => this.setState({ errors: err.response.data }));\n\n  }\n\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n\n      <div className=\"register\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Welcome Quack!</h1>\n            <p className=\"lead text-center\">\n              Login to your FullQuack Account\n            </p>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Quacked Question\"\n                  name=\"question\"\n                  value={this.state.question}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  data-role=\"tagsinput\" className=\"form-control\"\n                  placeholder=\"Tags (i.e., Javascript, Google Interview, React Dev)\"\n                  name=\"tags\"\n                  value={this.state.tags}\n                  onChange={this.onChange}\n                />\n              </div>\n              <ReactTags tags={tags}\n                    suggestions={suggestions}\n                    handleDelete={this.handleDelete}\n                    handleAddition={this.handleAddition}\n                    handleDrag={this.handleDrag}\n                    delimiters={delimiters} />\n              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n      \n    );\n  }\n}\n\n\nexport default PostQuestion;"]},"metadata":{},"sourceType":"module"}